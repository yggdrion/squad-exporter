name: 🐳 Build - Push - Release

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  setup:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      should_build: ${{ steps.check_commit.outputs.should_build }}
    steps:
      - name: Checkout code 🌿
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - name: Set up Node.js 🟢
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444
        with:
          node-version: 20

      - name: Install semantic-release and plugins 📦
        run: |
          npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github conventional-changelog-conventionalcommits semantic-release-export-data

      - name: Get next version from semantic-release 🏷️
        id: get_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release --dry-run || true
          VERSION=$(npx semantic-release --dry-run 2>&1 | grep -oP 'Skip v\K[0-9]+\.[0-9]+\.[0-9]+')
          echo "Detected version: $VERSION"
          if [ -z "$VERSION" ]; then
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Abort if not latest commit on main ❌
        id: check_commit
        run: |
          REMOTE_SHA=$(git ls-remote origin refs/heads/main | cut -f1)
          echo "Current SHA: $GITHUB_SHA"
          echo "Remote SHA:  $REMOTE_SHA"
          if [ "$GITHUB_SHA" != "$REMOTE_SHA" ]; then
            echo "This workflow is not running on the latest commit of main. Exiting early."
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

  # Build and push multi-architecture images
  build-and-push:
    needs: setup
    if: needs.setup.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout code 🌿
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up QEMU ⚡
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392

      - name: Set up Docker Buildx 🛠️
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Log in to GHCR 🔑
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch image 🐳
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ghcr.io/${{ github.repository }}:${{ needs.setup.outputs.version }} \
            -t ghcr.io/${{ github.repository }}:latest \
            -f Dockerfile \
            --push \
            --cache-from=type=gha \
            --cache-to=type=gha,mode=max .

  # Release job
  release:
    needs: [setup, build-and-push]
    if: needs.setup.outputs.should_build == 'true'
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Checkout code 🌿
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - name: Set up Node.js 🟢
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444
        with:
          node-version: 20

      - name: Install semantic-release and plugins 📦
        run: |
          npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github conventional-changelog-conventionalcommits semantic-release-export-data

      - name: Run semantic-release 🚀
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          semantic-release
